[{"D:\\React-Project\\netflix-c\\src\\index.js":"1","D:\\React-Project\\netflix-c\\src\\reportWebVitals.js":"2","D:\\React-Project\\netflix-c\\src\\App.js":"3","D:\\React-Project\\netflix-c\\src\\Row.js":"4","D:\\React-Project\\netflix-c\\src\\requests.js":"5","D:\\React-Project\\netflix-c\\src\\axios.js":"6","D:\\React-Project\\netflix-c\\src\\Banner.js":"7","D:\\React-Project\\netflix-c\\src\\Nav.js":"8","D:\\React-Project\\netflix-c\\src\\fire.js":"9","D:\\React-Project\\netflix-c\\src\\Login.js":"10","D:\\React-Project\\netflix-c\\src\\Hero.js":"11"},{"size":500,"mtime":499162500000,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"13"},{"size":3273,"mtime":1611677285663,"results":"15","hashOfConfig":"13"},{"size":2165,"mtime":1611316781672,"results":"16","hashOfConfig":"13"},{"size":723,"mtime":1607943585119,"results":"17","hashOfConfig":"13"},{"size":139,"mtime":1607947798315,"results":"18","hashOfConfig":"13"},{"size":1654,"mtime":1608563356564,"results":"19","hashOfConfig":"13"},{"size":963,"mtime":1611497256309,"results":"20","hashOfConfig":"13"},{"size":448,"mtime":1611677434807,"results":"21","hashOfConfig":"13"},{"size":2040,"mtime":1611497557429,"results":"22","hashOfConfig":"13"},{"size":305,"mtime":1611496753614,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"hpsthz",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"D:\\React-Project\\netflix-c\\src\\index.js",[],["49","50"],"D:\\React-Project\\netflix-c\\src\\reportWebVitals.js",[],"D:\\React-Project\\netflix-c\\src\\App.js",["51"],"/* eslint-disable react/jsx-no-undef */\nimport React, {useState, useEffect} from 'react';\nimport fire from './fire';\nimport './App.css';\nimport Row from \"./Row.js\";\nimport requests from \"./requests\";\nimport Banner from \"./Banner\";\nimport Nav from './Nav';\nimport Login from './Login';\nimport Hero from './Hero';\n\nfunction App() {\n  const [user,setUser] = useState(\"\");\n  const [email,setEmail] = useState(\"\");\n  const [password,setPassword] = useState(\"\");\n  const [emailError, setEmailError] = useState(\"\");\n  const [passwordError, setPasswordError] = useState(\"\");\n  const [hasAccount, setHasAccount] = useState(false);\n\n  const clearInput = () => {\n    setEmail('');\n    setPassword('');\n  }\n\n  const clearErrors= () => {\n    setEmailError('');\n    setPasswordError('');\n  }\n\n  const handleLogin = () =>  {\n    clearErrors();\n    fire\n    .auth()\n    .signInWithEmailAndPassword(email, password)\n    .catch(err => {\n      // eslint-disable-next-line default-case\n      switch(err.code){\n        case \"auth/invalid-email\":\n        case \"auth/user-disabled\":\n        case \"auth/user-not-found\":\n          setEmailError(err.message);\n          break;\n        case \"auth/wrong-password\":\n          setPasswordError(err.message);\n          break\n      }\n    });\n  }\n  const handleSignUp = () =>  {\n    clearErrors();\n    fire\n    .auth()\n    .createUserWithEmailAndPassword(email, password)\n    .catch(err => {\n      // eslint-disable-next-line default-case\n      switch(err.code){\n        case \"auth/email-already-in-use\":\n        case \"auth/invalid-email\":\n          setEmailError(err.message);\n          break;\n        case \"auth/weak-password\":\n          setPasswordError(err.message);\n          break\n      }\n    });\n  }\n\n  const handleLogout = () => {\n     fire.auth().signOut();\n  }\n\n  const authListener = () => {\n    fire.auth().onAuthStateChanged(user => {\n      if(user){\n        clearInput();\n        setUser(user);\n      } else {\n        setUser('');\n      }\n    })\n  }\n  useEffect (() => {\n    authListener();\n  }, [])\n  return (\n    <div className=\"app\">\n      {user ? (\n        <div className=\"app1\">\n         \n      <Nav></Nav>\n      \n      <Hero handleLogout={handleLogout}></Hero>\n      \n      <Banner></Banner>\n      <Row title = \"NETFLIX ORIGINALS\" fetchUrl={requests.fetchNetflixOriginals} isLargeRow />\n      <Row title = \"Trending Now\" fetchUrl={requests.fetchTrending} />\n      <Row title = \"Top Rated\" fetchUrl={requests.fetchTopRated} />\n      <Row title = \"Action Movies\" fetchUrl={requests.fetchActionMovies} />\n      <Row title = \"Comedy Movies\" fetchUrl={requests.fetchComedyMovies} />\n      <Row title = \"Horror Movies\" fetchUrl={requests.fetchHorrorMovies} />\n      <Row title = \"Romance Movies\" fetchUrl={requests.fetchRomanceMovies} />\n      <Row title = \"Documentaries\" fetchUrl={requests.fetchDocumentaries} />\n      </div>\n      ) : (\n        <Login\n        email={email}\n        setEmail={setEmail}\n        password={password}\n        setPassword={setPassword}\n        handleLogin={handleLogin}\n        handleSignUp={handleSignUp}\n        hasAccount={hasAccount}\n        setHasAccount={setHasAccount}\n        emailError={emailError}\n        passwordError={passwordError}\n      />\n      )}\n      \n    </div>\n  );\n}\n\nexport default App;\n\n","D:\\React-Project\\netflix-c\\src\\Row.js",["52"],"import React, { useState , useEffect} from \"react\";\r\nimport axios from \"./axios\";\r\nimport './Row.css';\r\nimport Youtube from 'react-youtube';\r\nimport movieTrailer from 'movie-trailer';\r\n\r\nconst base_url = \"https://image.tmdb.org/t/p/original/\";\r\nconst apiKey = \"79acaf2d0ef76a82de5dbeb78d405d57\";\r\nfunction Row({ title , fetchUrl, isLargeRow}){\r\n\r\n    const [movies, setMovies] = useState([]);\r\n    const [trailerUrl, setTrailerUrl] = useState(\"\");\r\n\r\n    const opts = {\r\n        height: \"390\",\r\n        width: \"100%\",\r\n        playerVars:{\r\n            //https://developers.google.com/youtube/player_parameters\r\n            autoplay:1,\r\n        },\r\n    }\r\n\r\n   \r\n    useEffect(() => {\r\n\r\n        async function fetchData(){\r\n            const request = await axios.get(fetchUrl);\r\n            setMovies(request.data.results)\r\n            return request;\r\n        }\r\n        fetchData();\r\n\r\n    }, [fetchUrl]);\r\n\r\n    const handleClick = (movie) => {\r\n        console.log(movie.name)\r\n        if(trailerUrl){\r\n            setTrailerUrl(\"\");\r\n        } else {\r\n            movieTrailer(movie?.name || movie?.title ||  \"\" )\r\n                .then((url) => {\r\n                    \r\n                    const urlParams = new URLSearchParams(new URL(url).search)\r\n                    \r\n                    console.log(url)\r\n                    setTrailerUrl(urlParams.get('v'));\r\n\r\n                \r\n\r\n                }).catch((error) => console.log(error))\r\n            }\r\n    }\r\n\r\n    return(\r\n        \r\n        <div className = \"row\">\r\n            <h2>{title}</h2>\r\n            <div className = \"row__posters\">\r\n\r\n                {movies.map(movie => (\r\n                    <img  \r\n                    key={movie.id}\r\n                    onClick={() => handleClick(movie)}\r\n                    className = {`row__poster ${isLargeRow && \"row__posterLarge\"}`}\r\n                    src={`${base_url}${isLargeRow ? movie.poster_path : movie.backdrop_path}`}\r\n                    alt={movie.name}/>\r\n                ))}\r\n            </div>\r\n            {trailerUrl && <Youtube videoId={trailerUrl} opts={opts}></Youtube>}\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Row;","D:\\React-Project\\netflix-c\\src\\requests.js",[],"D:\\React-Project\\netflix-c\\src\\axios.js",[],"D:\\React-Project\\netflix-c\\src\\Banner.js",[],"D:\\React-Project\\netflix-c\\src\\Nav.js",[],"D:\\React-Project\\netflix-c\\src\\fire.js",[],"D:\\React-Project\\netflix-c\\src\\Login.js",[],"D:\\React-Project\\netflix-c\\src\\Hero.js",[],{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","severity":1,"message":"58","line":84,"column":6,"nodeType":"59","endLine":84,"endColumn":8,"suggestions":"60"},{"ruleId":"61","severity":1,"message":"62","line":8,"column":7,"nodeType":"63","messageId":"64","endLine":8,"endColumn":13},"no-native-reassign",["65"],"no-negated-in-lhs",["66"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'authListener'. Either include it or remove the dependency array.","ArrayExpression",["67"],"no-unused-vars","'apiKey' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation",{"desc":"68","fix":"69"},"Update the dependencies array to be: [authListener]",{"range":"70","text":"71"},[2027,2029],"[authListener]"]